apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-query-global
  namespace: thanos
  labels:
    app: thanos-query-global
spec:
  replicas: 2
  selector:
    matchLabels:
      app: thanos-query-global
  template:
    metadata:
      labels:
        app: thanos-query-global
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - thanos-query-global
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - name: thanos-query-global
        args:
        - query
        - --log.level=debug
        - --query.auto-downsampling
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:9090
        - --query.partial-response
        - --query.replica-label=prometheus_replica
        - --store=192.168.10.30:30030
        - --store=192.168.10.31:30030
        - --store=192.168.10.32:30030
        - --store=192.168.20.30:30030
        - --store=192.168.20.31:30030
        - --store=192.168.20.32:30030
        image: harbor.com/prometheus/thanos:v0.26.0
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "8Gi"
            cpu: "4" 
          requests:
            memory: "128Mi"
            cpu: "100m" 
        ports:
        - containerPort: 10901
          name: grpc
        - containerPort: 9090
          name: http
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: /-/ready
            port: http
            scheme: HTTP
          periodSeconds: 5
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /-/healthy
            port: http
            scheme: HTTP
          periodSeconds: 30